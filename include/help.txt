R"---(---context help---

Welcome to context!
In context, common movement and modification 
keys are accessible by holding Alt and 
pressing keys on and near the home row.
These will be listed below:

 Alt-h        Alt-j        Alt-k       Alt-l
   <            v            ^           >

Ctrl-Alt-h  Ctrl-Alt-j  Ctrl-Alt-k  Ctrl-Alt-l
  <---          |            ^         --->
                v            |


Alt-y             Alt-o
Home               End

Ctrl-Alt-y        Ctrl-Alt-o
Buffer begin      Buffer end

Alt-u             Alt-i
Backspace          Del

Ctrl-Alt-u        Ctrl-Alt-i
Backspace word     Del word

Alt-p
Insert line below cursor

Ctrl-Alt-p
Insert line above cursor

Ctrl-a
Select all

Ctrl-d
Delete line or delete lines in selection

Ctrl-c
Copy line or copy selection

Ctrl-x
Cut line or cut selection

Ctrl-v
Paste copied text

Alt-c
Copy lines in selection

Alt-x
Cut lines in selection

Alt-v
Paste copied text on a new line

Ctrl-s
Save

Ctrl-o
Open

Ctrl-n
New mode

Ctrl-PageDown
Ctrl-'
Next mode

Ctrl-PageUp
Ctrl-;
Previous mode

Ctrl-Alt-PageDown
Ctrl-Alt-'
Move mode tab to next

Ctrl-Alt-PageUp
Ctrl-Alt-;
Move mode tab to previous

Alt-1 - Alt-0
Switch to Nth mode

Ctrl-e
Command entry

Ctrl-q
Quit

Ctrl-g
Goto

Ctrl-f
Find

Alt-f
Case sensitive find

Ctrl-r
Replace

Alt-r
Case sensitive replace

Ctrl-z
Undo

Ctrl-y
Redo

Tab
Ctrl-i
Indent or next search hit

Shift-Tab
Ctrl-u
Dedent or previous search hit

Escape
Cancel search, entry, or selection

F1
Open help

F2
Save as


Text can be selected by holding shift and
pressing a movement key.


Global Commands:
	Pressing Ctrl-e will enter Entry mode which
	enables the configuration of context using
	commands. Several common commands are bound to
	keybinds which are listed above.
	Here are the global commands:
	
	open path
		Opens file at 'path'.
		
	save
		Saves current file.
	
	saveAs path
		Renames file to 'path'.
		
	reload
		Reloads the current file.
	
	var varName value
		Sets the global config var 'varName' to be 'value'.
		
	modeVar varName value
		Sets the mode-specific config var 'varName' to be 'value'
		
	proc procName
		Starts the definition of a procedure named 'procName'.
		Definition ends when 'end' is encountered.
		
	source filePath
		Opens the file at 'filePath' and executes it as commands.
	
	bind modeName.actionName keybinds...
		Binds the action of 'actionName' in 'modeName' to all of the
		space-delimited keybinds in the 'keybinds...' arg.
		For a full list of action names, go to:
			github.com/ethanwiebe/context/blob/master/include/actions.h
			github.com/ethanwiebe/context/blob/master/src/modes/edit/editactions.h
	
	bind procName keybinds...
		Binds the procedure 'procName' to run when any of the
		keybinds in 'keybinds...' are pressed.
		
	ext extName modeName [procName]
		Any files of type 'extName' will be opened in mode 'modeName' and
		optionally the procedure 'procName' will be run after opening.
	
	modeHook modeName procName
		Whenever the mode 'modeName' is opened the procedure 
		'procName' will be run.
	
	style styleName fg bg [opts]
		Sets the style of 'styleName' at the current style
		index to {'fg', 'bg', 'opts'}. 'fg' and 'bg' should
		be six character hex colors (ex. fabd2f) and opts
		is 0-2 characters consisting of 'b' for bold and
		'u' for underline (ex. bu = bold and underline).
		A full list of style names can be viewed at:
			github.com/ethanwiebe/context/blob/master/include/stylename.h
			
			
	The effects of configuration commands do not persist across
	sessions. At start-up a file ~/.ctxcfg is checked
	and if it exists all lines in the file will be executed 
	as commands.


Edit Mode Commands:
	goto lineNumber [colNumber]
	
	find searchString
		Does a case insensitive search for 'searchString'.
	
	findCase searchString
		Does a case sensitive search for 'searchString'.
	
	replace searchString replaceString
		Case insensitive search for 'searchString', replacing
		with 'replaceString'.
	
	replaceCase searchString replaceString
		Case sensitive search for 'searchString', replacing
		with 'replaceString'.
	
	If you are selecting text when you run the find/replace 
	commands, they will run their search within your selection bounds
	instead of the whole file.
	

Variables of 'var' and 'modeVar':
	var varName value
	'varName' can be:
		style                 - style name to set/create
		                        (default 'default')
		sleepy                - whether to sleep or busy loop while waiting
		                        (default true)
		tabBarWidth           - width of tabs on top of the screen
		                        (default 16)
		autoReload            - whether or not to automatically reload the current mode
		                        when the file is modified, this settings applies per mode
		                        (default false)
		autoReloadDelay       - time in ms to wait in between checks for file modification time
		                        (default 1000)
		
		
	modeVar varName value
	In edit mode 'varName' can be:
		tabSize               - tab size in spaces
		                        (default 4)
		multiAmount           - amount of chars to move in 'multi' movements
		                        (default 4)
		displayLineNumbers    - whether to display line numbers or not
		                        (default true)
		autoIndent            - auto-indent upon newline
		                        (default true)
		cursorLock            - lock cursor in the center of the screen vertically
		                        (default false)
		cursorWrap            - cursor can wrap around lines
		                        (default false)
		smartHome             - pressing home will go to the first non-whitespace character
		                        (default true)
		tabMode               - 'spaces' or 'tabs'
		                        (default 'tabs')
		moveMode              - 'multi', 'word', or 'pascal'
		                        (default 'multi')
		deleteMode            - 'multi', 'word', or 'pascal'
		                        (default 'word')
		syntaxHighlighter     - set the syntax highlighter to use
		                        (default 'none')
	
		Move/delete modes:
			'word' means skip over blocks of characters/whitespace in one step
			'pascal' is same as above but separates word with capitalization
			'multi' moves a fixed amount each time
			
		Syntax highlighters:
			cpp
			python
			glsl
			terse

)---"
