R"---(---context help---

Welcome to context!
In context, common movement and modification 
keys are accessible by holding Alt and 
pressing keys on and near the home row.
These will be listed below:

Alt-h  Alt-j  Alt-k  Alt-l
  <      v      ^      >

Ctrl-Alt-h  Ctrl-Alt-j  Ctrl-Alt-k  Ctrl-Alt-l
  <---          |            ^         --->
                v            |


Alt-y             Alt-o
Home               End

Ctrl-Alt-y        Ctrl-Alt-o
Buffer begin      Buffer end

Alt-u             Alt-i
Backspace          Del

Ctrl-Alt-u        Ctrl-Alt-i
Backspace word     Del word

Alt-p
Insert line below cursor

Ctrl-Alt-p
Insert line above cursor

Alt-s
Toggle select

Ctrl-a
Select all

Ctrl-d
Delete line or delete lines in selection

Ctrl-c
Copy line or copy selection

Ctrl-x
Cut line or cut selection

Ctrl-v
Paste copied text

Alt-c
Copy lines in selection

Alt-x
Cut lines in selection

Alt-v
Paste copied text on a new line

Ctrl-s
Save

Ctrl-o
Open

Ctrl-n
New mode

Ctrl-PageDown
Ctrl-'
Next mode

Ctrl-PageUp
Ctrl-;
Previous mode

Ctrl-Alt-PageDown
Ctrl-Alt-'
Move mode tab to next

Ctrl-Alt-PageUp
Ctrl-Alt-;
Move mode tab to previous

Alt-1 - Alt-0
Switch to Nth mode

Ctrl-e
Command entry

Ctrl-q
Quit

Ctrl-g
Goto

Ctrl-f
Find

Ctrl-r
Replace

Ctrl-z
Undo

Ctrl-y
Redo

Tab
Indent or next search hit

Shift-Tab
Dedent or previous search hit

F1
Open help

F2
Save as


Commands:
Pressing Ctrl-e will enter Entry mode which
enables the configuration of context using
commands.
Here are the commands:

open path
	Opens file at 'path'.
	
save path
	Saves current file.

saveas path
	Renames file to 'path'.

var varName value
	Sets the global config var 'varName' to be 'value'.
	
modevar varName value
	Sets the mode-specific config var 'varName' to be 'value'
	
proc procName
	Starts the definition of a procedure named 'procName'.
	Definition ends when 'end' is encountered.

bind modeName.actionName keybinds...
	Binds the action of 'actionName' in 'modeName' to all of the
	space-delimited keybinds in the 'keybinds...' arg.
	For a full list of action names, go to:
		github.com/ethanwiebe/context/blob/master/include/actions.h
		github.com/ethanwiebe/context/blob/master/src/modes/edit/editactions.h

bind procName keybinds...
	Binds the procedure 'procName' to run when any of the
	keybinds in 'keybinds...' are pressed.
	
ext extName modeName [procName]
	Any files of type 'extName' will be opened in mode 'modeName' and
	optionally the procedure 'procName' will be run after opening.

modehook modeName procName
	Whenever the mode 'modeName' is opened the procedure 
	'procName' will be run.

style styleName fg bg [opts]
	Sets the style of 'styleName' at the current style
	index to {'fg', 'bg', 'opts'}. 'fg' and 'bg' should
	be six character hex colors (ex. fabd2f) and opts
	is 0-2 characters consisting of 'b' for bold and
	'u' for underline (ex. bu = bold and underline).
	A full list of style names can be viewed at:
		github.com/ethanwiebe/context/blob/master/include/stylename.h
		

The effects of these commands do not persist across
sessions. At start-up a file ~/.ctxcfg is checked
and if it exists all lines in the file will be executed 
as commands.


Variables of 'var' and 'modevar':
	var varName value
	
	'varName' can be:
		style                 - style name to set/create
		sleepy                - whether to sleep or busy loop while waiting
		tabBarWidth           - width of tabs on top of the screen
		
	In edit mode 'modevar' can be:
		tabSize               - tab size in spaces
		multiAmount           - amount of chars to move in 'multi' movements
		displayLineNumbers    - whether to display line numbers or not
		autoIndent            - auto-indent upon newline
		cursorLock            - lock cursor in the center of the screen vertically
		cursorWrap            - cursor can wrap around lines
		smartHome             - pressing home will go to the first non-whitespace character
		tabMode               - 'spaces' or 'tabs'
		moveMode              - 'multi', 'word', or 'pascal'
		deleteMode            - 'multi', 'word', or 'pascal'
		syntaxHighlighter     - set the syntax highlighter to use
	
		Move/delete modes:
			'word' means skip over blocks of characters/whitespace in one step
			'pascal' is same as above but separates word with capitalization
			'multi' moves a fixed amount each time
			
		Syntax highlighters:
			cpp
			python
			glsl
			terse

)---"
